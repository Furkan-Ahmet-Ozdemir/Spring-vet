apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-vet-deployment
  namespace: spring-vet-app
  labels:
    app: spring-vet
    version: v1
spec:
  replicas: 2
  
  selector:
    matchLabels:
      app: spring-vet
  
  strategy:
    type: RollingUpdate  
    rollingUpdate:
      maxUnavailable: 1  
      maxSurge: 1       
  
  template:
    metadata:
      labels:
        app: spring-vet
        version: v1
    spec:
      containers:
      - name: spring-vet-container
        image: willtreatyy/basic-spring-boot-docker:latest
        
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        
        envFrom:
        - configMapRef:
            name: spring-vet-config
        
        resources:
          requests:  
            memory: "256Mi"  
            cpu: "250m"      
          limits:    
            memory: "512Mi"  
            cpu: "500m"    
        

        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60  # İlk kontrolü 60 saniye sonra yap
          periodSeconds: 30        # Her 30 saniyede bir kontrol et
          timeoutSeconds: 5        # 5 saniye timeout
          failureThreshold: 3      # 3 kez başarısız olursa container'ı yeniden başlat
        
        # Readiness Probe - Container'ın trafiği kabul etmeye hazır olup olmadığını kontrol eder
        # Bu check başarısız olursa, Kubernetes bu Pod'a trafik göndermez
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30  # İlk kontrolü 30 saniye sonra yap
          periodSeconds: 10        # Her 10 saniyede bir kontrol et
          timeoutSeconds: 3        # 3 saniye timeout
          failureThreshold: 3      # 3 kez başarısız olursa trafiği bu Pod'a göndermeyi durdur
        
        # Security context - güvenlik ayarları
        securityContext:
          runAsNonRoot: true       # Root olmayan kullanıcı ile çalıştır
          runAsUser: 1000         # User ID
          allowPrivilegeEscalation: false  # Privilege escalation'a izin verme